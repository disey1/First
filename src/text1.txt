Java использует двухбайтовые символы для хранения букв, а классы FileReader и FileWriter предназначены для удобной работы с текстовыми файлами. Эти классы могут считывать файлы посимвольно, используя метод read(), или же построчно, с помощью метода readLine(). У классов FileReader и FileWriter также есть аналоги, BufferedReader и BufferedWriter, позволяющие ускорить работу с файлами.

Работа с файлами - это распространенная вещь в программировании. Нам постоянно что-то надо сохранять или же брать информацию из сохраненных документов. Перед началом работы с любым текстовым документом важно изначально открыть сам документ. При этом, если его не будет, то это вызовет ошибку. По этой причине, всегда стоит оформлять открытие документов при помощи исключений. Для открытия файла существует класс File. После чтения или же записи данных в файл его необходимо закрывать. Помимо этого все эти действия, включая создание файла стоит делать через операторы исключений.

Несмотря на то что файловые операции ввода-вывода чаще всего выполняются с помощью байтовых потоков, для этой цели можно использовать также символьные потоки. Преимущество символьных потоков заключается в том, что они оперируют непосредственно символами в кодировке Unicode. Так, если вам надо сохранить текст в кодировке Unicode, то для этой цели лучше всего воспользоваться символьными потоками. Как правило, для файлового ввода-вывода символов используются классы FileReader и FileWriter.

Класс FileReader создает объект типа Reader, который можно использовать для чтения содержимого файла. Чаще всего используется следующая форма конструктора этого класса: FileReader(String имя_файла) throws FileNotFoundException где имя_файла обозначает полный путь к файлу. Если указанный файл не существует, генерируется исключение FileNotFoundException. Класс FileReader является производным от классов InputStreamReader и Reader. Следовательно, в нем доступны методы, объявленные в его суперклассах.

В приведенном ниже примере создается простая утилита, отображающая на экране содержимое текстового файла test. txt. Она является своего рода дополнением к утилите, рассмотренной в предыдущем разделе.